name: Lab 57 - Custom Env to Step

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

# Workflow-level env (lowest custom scope)
env:
  APP_NAME: "lab57-app"
  API_BASE: "https://example.internal/api"

jobs:
  demo-windows:
    runs-on: windows-latest
    env:
      APP_NAME: "lab57-app"
      STAGE: "dev"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Step-level env and short SHA (pwsh)
        id: win
        shell: pwsh
        env:
          FEATURE_FLAG: "on"
        run: |
          $short = $env:GITHUB_SHA.Substring(0,7)
          "short=$short" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          Write-Output "APP_NAME=$env:APP_NAME"
          Write-Output "STAGE=$env:STAGE"
          Write-Output "FEATURE_FLAG=$env:FEATURE_FLAG"

      - name: Use env in action input (upload-artifact)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ env.STAGE }}-${{ steps.win.outputs.short }}
          path: README.md

  demo:
    runs-on: ubuntu-latest

    # Job-level env (overrides workflow-level when keys collide)
    env:
      STAGE: "dev"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Step-level env (highest precedence)
        env:
          FEATURE_FLAG: "on"
          # Compose a value using an expression at definition time
          ENDPOINT: "${{ env.API_BASE }}/v1"
        shell: bash
        run: |
          echo "APP_NAME=${APP_NAME}"         # from workflow env
          echo "STAGE=${STAGE}"               # from job env
          echo "FEATURE_FLAG=${FEATURE_FLAG}" # from step env
          echo "ENDPOINT=${ENDPOINT}"         # composed via expression, consumed via shell

      - name: Compute short SHA (make it a step output)
        id: sha
        shell: bash
        run: |
          SHORT="${GITHUB_SHA::7}"
          echo "short=${SHORT}" >> "$GITHUB_OUTPUT"

      - name: Use custom env that includes short SHA
        env:
          BUILD_TAG: "lab57-${{ github.run_number }}-${{ steps.sha.outputs.short }}"
        shell: bash
        run: |
          echo "BUILD_TAG=${BUILD_TAG}"

      - name: Upload artifact using env in inputs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ env.STAGE }}-${{ steps.sha.outputs.short }}
          path: README.md
        # Note: 'with:' uses expressions, not shell $VAR

      - name: Read env inside an action (github-script)
        uses: actions/github-script@v7
        env:
          FEATURE_FLAG: "on"
          BUILD_TAG: "lab57-${{ github.run_number }}-${{ steps.sha.outputs.short }}"
        with:
          script: |
            const flag = process.env.FEATURE_FLAG;
            const tag  = process.env.BUILD_TAG;
            core.notice(`Feature flag = ${flag}`);
            core.notice(`Build tag    = ${tag}`);


